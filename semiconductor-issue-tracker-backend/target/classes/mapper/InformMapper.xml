<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semiconductor.issuetracker.mapper.InformMapper">

    <resultMap id="InformResultMap" type="Inform">
        <id property="id" column="id"/>
        <result property="informId" column="inform_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="author" column="author"/>
        <result property="priority" column="priority"/>
        <result property="category" column="category"/>
        <result property="targetDepartment" column="target_department"/>
        <result property="gbm" column="gbm"/>
        <result property="area" column="area"/>
        <result property="line" column="line"/>
        <result property="equipmentId" column="equipment_id"/>
        <result property="actionTaken" column="action_taken"/>
        <result property="impactAssessment" column="impact_assessment"/>
        <result property="status" column="status"/>
        <result property="notifyEmail" column="notify_email"/>
        <result property="notifySms" column="notify_sms"/>
        <result property="urgent" column="urgent"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="selectColumns">
        id, inform_id, title, description, author, priority, category, target_department,
        gbm, area, line, equipment_id, action_taken, impact_assessment, status,
        notify_email, notify_sms, urgent, created_at, updated_at
    </sql>

    <select id="findAll" resultMap="InformResultMap">
        SELECT <include refid="selectColumns"/>
        FROM informs
        ORDER BY created_at DESC
    </select>

    <select id="findByFilters" resultMap="InformResultMap">
        SELECT <include refid="selectColumns"/>
        FROM informs
        <where>
            <if test="filters.status != null and filters.status != ''">
                AND status = #{filters.status}
            </if>
            <if test="filters.priority != null and filters.priority != ''">
                AND priority = #{filters.priority}
            </if>
            <if test="filters.category != null and filters.category != ''">
                AND category = #{filters.category}
            </if>
            <if test="filters.author != null and filters.author != ''">
                AND author LIKE CONCAT('%', #{filters.author}, '%')
            </if>
            <if test="filters.title != null and filters.title != ''">
                AND title LIKE CONCAT('%', #{filters.title}, '%')
            </if>
            <if test="filters.fromDate != null">
                AND created_at >= #{filters.fromDate}
            </if>
            <if test="filters.toDate != null">
                AND created_at &lt;= #{filters.toDate}
            </if>
        </where>
        ORDER BY created_at DESC
        <if test="filters.limit != null and filters.offset != null">
            LIMIT #{filters.limit} OFFSET #{filters.offset}
        </if>
    </select>

    <select id="findById" resultMap="InformResultMap">
        SELECT <include refid="selectColumns"/>
        FROM informs
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="Inform" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO informs (
            inform_id, title, description, author, priority, category, target_department,
            gbm, area, line, equipment_id, action_taken, impact_assessment, status,
            notify_email, notify_sms, urgent
        ) VALUES (
            #{informId}, #{title}, #{description}, #{author}, #{priority}, #{category}, #{targetDepartment},
            #{gbm}, #{area}, #{line}, #{equipmentId}, #{actionTaken}, #{impactAssessment}, #{status},
            #{notifyEmail}, #{notifySms}, #{urgent}
        )
    </insert>

    <update id="update" parameterType="Inform">
        UPDATE informs SET
            title = #{title},
            description = #{description},
            author = #{author},
            priority = #{priority},
            category = #{category},
            target_department = #{targetDepartment},
            gbm = #{gbm},
            area = #{area},
            line = #{line},
            equipment_id = #{equipmentId},
            action_taken = #{actionTaken},
            impact_assessment = #{impactAssessment},
            status = #{status},
            notify_email = #{notifyEmail},
            notify_sms = #{notifySms},
            urgent = #{urgent},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM informs WHERE id = #{id}
    </delete>

    <select id="countByFilters" resultType="int">
        SELECT COUNT(*)
        FROM informs
        <where>
            <if test="filters.status != null and filters.status != ''">
                AND status = #{filters.status}
            </if>
            <if test="filters.priority != null and filters.priority != ''">
                AND priority = #{filters.priority}
            </if>
            <if test="filters.category != null and filters.category != ''">
                AND category = #{filters.category}
            </if>
            <if test="filters.author != null and filters.author != ''">
                AND author LIKE CONCAT('%', #{filters.author}, '%')
            </if>
            <if test="filters.title != null and filters.title != ''">
                AND title LIKE CONCAT('%', #{filters.title}, '%')
            </if>
            <if test="filters.fromDate != null">
                AND created_at >= #{filters.fromDate}
            </if>
            <if test="filters.toDate != null">
                AND created_at &lt;= #{filters.toDate}
            </if>
        </where>
    </select>

    <select id="findByStatus" resultMap="InformResultMap">
        SELECT <include refid="selectColumns"/>
        FROM informs
        WHERE status = #{status}
        ORDER BY created_at DESC
    </select>

    <select id="findByCategory" resultMap="InformResultMap">
        SELECT <include refid="selectColumns"/>
        FROM informs
        WHERE category = #{category}
        ORDER BY created_at DESC
    </select>

    <select id="findByPriority" resultMap="InformResultMap">
        SELECT <include refid="selectColumns"/>
        FROM informs
        WHERE priority = #{priority}
        ORDER BY created_at DESC
    </select>

</mapper>
